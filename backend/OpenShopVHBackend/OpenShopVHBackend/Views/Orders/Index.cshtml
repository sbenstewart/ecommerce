@using OpenShopVHBackend.Models;
@model IEnumerable<OrderViewModel>

<div class="page-title">
    <i class="icon-custom-left"></i>
    <h3><span class="semi-bold">Orders</span></h3>
</div>

<div class="row">
    <div class="col-lg-12">
     @(Html.EJ().Grid<OrderViewModel>("Grid")
     .Datasource(Model)
     .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
     {
         items.AddTool(ToolBarItems.ExcelExport);
         items.AddTool(ToolBarItems.PdfExport);
     }))
     .AllowPaging()
     .AllowResizing(true)
     .AllowSorting(true)
     .AllowFiltering(true)
     .AllowTextWrap(true)
     .Columns(col =>
     {
         col.Field(p => p.OrderId).TextAlign(TextAlign.Left).Width(50).Add();
         col.Field(p => p.RemoteId).TextAlign(TextAlign.Left).Width(60).Add();
         col.Field(p => p.DateCreated).TextAlign(TextAlign.Left).Width(180).Add();
         col.Field(p => p.Status).TextAlign(TextAlign.Left).Width(120).Add();
         col.Field(p => p.CardCode).TextAlign(TextAlign.Left).Width(90).Add();
         col.Field(p => p.SalesPersonName).TextAlign(TextAlign.Left).Width(120).Add();
         col.Field(p => p.LastErrorMessage).TextAlign(TextAlign.Left).Width(200).Add();
         col.HeaderText("Options").Template("<a href=./Orders/Process?userId={{:UserId}}&id={{:OrderId}}>Process</a>").Add();
     }))

    </div>
</div>
