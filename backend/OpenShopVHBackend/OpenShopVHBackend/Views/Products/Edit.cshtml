@model OpenShopVHBackend.Models.Product

@using Resources;
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "CreateForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(m => m.ProductId)
    @Html.HiddenFor(m => m.RemoteId)
    @Html.HiddenFor(m => m.CategoryId)
    @Html.HiddenFor(m => m.MainImageHighRes)

    <div class="grid">
        <div class="grid-title no-border">
            <h3>@Resources.Products</h3>
        </div>
        <div class="grid-body no-border">
            <div class="row">
                <div class="col-md-4">
                    <div class="text-center">
                        @if (@Model.MainImage == null || Model.MainImage.Count() < 4)
                                {
                                <img src='@Url.Content("~/Content/assets/img/profiles/default-100.png")' class="avatar img-circle" alt="avatar">
                                }
                                else
                                {
                                <img src="@Url.Content(Model.MainImage)" class="avatar img-circle" alt="avatar" style="width:100px;height:100px">
                                }
                        <h6>@Resources.Image</h6>
                        <input type="file" class="form-control" name="file" id="file" style="width:100%">
                        @Html.HiddenFor(model => model.MainImage)
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="row">
                        <div class="col-md-5">
                            <label class="form-label">@Resources.Name</label>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5">
                            <label class="form-label">@Resources.Code</label>
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-5">
                            <label class="form-label">@Resources.Brands</label>
                            @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5">
                            <label class="form-label">Temporada</label>
                            @Html.EditorFor(model => model.Season, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Season, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-10">
                            <label class="form-label">@Resources.Description</label>
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
